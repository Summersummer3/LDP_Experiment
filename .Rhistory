processed_ez(experiment_data)
processed_ez <- function(x){
error <- c()
for (i in seq(1, length(x[,1]) - 1, by = 2)){
a <- as.vector(unlist(x[i,]))
b <- as.vector(unlist(x[i+1,]))
paste(a)
paste(b)
tmp <- 0
for (j in 1: length(x)-2){
if(b[j] < 0){
b[j] <- 0
}
tmp = tmp + (a[j] - b[j]) ** 2
}
error[length(error) + 1] <- tmp
}
return(error)
}
processed_ez(experiment_data)
as.vector(unlist(experiment_data[1,]))
as.vector(unlist(experiment_data[2,]))
b <- as.vector(unlist(experiment_data[2,]))
b[1]
length(experiment_data[1,])
length(experiment_data[,1])
length(experiment_data)
a <- as.vector(unlist(experiment_data[1,]))
error <- c()
for (i in 1:length(a)-2){
}
tmp = 0
for (i in 1:length(a)-2){
tmp <- tmp + (a[i] - b[i]) ** 2
}
tmp
for (i in 1:length(a)-2){
tmp <- tmp + (a[i] - b[i]) ** 2
paste(c(tmp, i))
}
for (i in 1:length(a)-2){
tmp <- tmp + (a[i] - b[i]) ** 2
cat(c(tmp, i))
}
for (i in 1:length(a)-2){
tmp <- tmp + (a[i] - b[i]) ** 2
cat(tmp)
}
tmp
tmp <- 0
for (i in 1:length(a)-2){
tmp <- tmp + (a[i] - b[i]) ** 2
cat(tmp)
}
a
b
(a[1] - b[1])
(a[1] - b[1])**2
for (i in 1:length(a)-2){
tmp <- tmp + (a[i] - b[i]) ** 2
cat(i)
}
for (i in 1:(length(a)-2)){
tmp <- tmp + (a[i] - b[i]) ** 2
cat(i)
}
tmp <- 0
for (i in 1:(length(a)-2)){
tmp <- tmp + (a[i] - b[i]) ** 2
cat(tmp)
}
processed_ez <- function(x){
error <- c()
for (i in seq(1, length(x[,1]) - 1, by = 2)){
a <- as.vector(unlist(x[i,]))
b <- as.vector(unlist(x[i+1,]))
paste(a)
paste(b)
tmp <- 0
for (j in 1: (length(x)-2)){
if(b[j] < 0){
b[j] <- 0
}
tmp = tmp + (a[j] - b[j]) ** 2
}
error[length(error) + 1] <- tmp
}
return(error)
}
processed_ez <- function(x){
error <- c()
for (i in seq(1, length(x[,1]) - 1, by = 2)){
a <- as.vector(unlist(x[i,]))
b <- as.vector(unlist(x[i+1,]))
paste(a)
paste(b)
tmp <- 0
for (j in 1: (length(x)-2)){
tmp = tmp + (a[j] - b[j]) ** 2
}
error[length(error) + 1] <- tmp
}
return(error)
}
processed_ez(experiment_data)
processed_ez <- function(x){
error <- c()
for (i in seq(1, length(x[,1]) - 1, by = 2)){
a <- as.vector(unlist(x[i,]))
b <- as.vector(unlist(x[i+1,]))
tmp <- 0
for (j in 1: (length(x)-2)){
if (b[j] < 0){}
tmp = tmp + (a[j] - b[j]) ** 2
}
error[length(error) + 1] <- tmp
}
return(error)
}
processed_ez <- function(x){
error <- c()
for (i in seq(1, length(x[,1]) - 1, by = 2)){
a <- as.vector(unlist(x[i,]))
b <- as.vector(unlist(x[i+1,]))
tmp <- 0
for (j in 1: (length(x)-2)){
if (b[j] < 0){
b[j] <- 0
}
tmp = tmp + (a[j] - b[j]) ** 2
}
error[length(error) + 1] <- tmp
}
return(error)
}
processed_ez(experiment_data)
mean_ez_processed_0.5 <- mean(processed_ez(experiment_data_0.5))
mean_ez_processed_0.5
mean_ez_processed_1 <- mean(processed_ez(experiment_data_1))
mean_ez_processed_1 <- mean(processed_ez(experiment_data_1.0))
mean_ez_processed_1.0 <- mean(processed_ez(experiment_data_1.0))
mean_ez_processed_1.5 <- mean(processed_ez(experiment_data_1.5))
mean_ez_processed_2.0 <- mean(processed_ez(experiment_data_2.0))
mean_ez_processed_2.5 <- mean(processed_ez(experiment_data_2.5))
mean_p_error
basic_rappor_ln9 <- read.csv("result_basic_rappor_2.19722457734.csv")
basic_rappor_ln49 <- read.csv("result_basic_rappor_3.89182029811.csv")
experiment_data_ln9 <- read.csv("result_2.19722457734.csv")
experiment_data_ln49 <- read.csv("result_3.89182029811.csv")
sampling_rappor_ln9 <- read.csv("result_sampling_rappor_2.19722457734.csv")
sampling_rappor_ln49 <- read.csv("result_sampling_rappor_3.89182029811.csv")
error_mean_ln9 <- mean_for_error(experiment_data_ln9$error, experiment_data_ln9$max_error)
error_mean_ln49 <- mean_for_error(experiment_data_ln49$error, experiment_data_ln49$max_error)
error_mean_br_ln9 <- mean_for_error(basic_rappor_ln9$error, basic_rappor_ln9$max_error)
error_mean_br_ln49 <- mean_for_error(basic_rappor_ln49$error, basic_rappor_ln49$max_error)
error_mean_sr_ln9 <- mean_for_error(sampling_rappor_ln9$error, sampling_rappor_ln9$max_error)
error_mean_sr_ln49 <- mean_for_error(sampling_rappor_ln49$error, sampling_rappor_ln49$max_error)
eps <- c("log(9)","log(49)")
x = rep(eps, each = 3)
y = rep(c("sampling_Rappor", "basic_Rappor", "our_method"), time=2)
error_mean_cmp <- c(basic_rappor_ln9[1], basic_rappor_ln49[1])
error_mean_br_cmp <- c(basic_rappor_ln9[1], basic_rappor_ln49[1])
error_mean_sr_cmp <- c(sampling_rappor_ln9[1], sampling_rappor_ln49[1])
error_mean_cmp <- c(error_mean_ln9[1], error_mean_ln49[1])
error_mean_br_cmp <- c(error_mean_br_ln9[1], error_mean_br_ln49[1])
error_mean_sr_cmp <- c(error_mean_sr_ln9[1], error_mean_sr_ln49[1])
c = as.vector(rbind(error_mean_sr_cmp, error_mean_br_cmp, error_mean_cmp))
df = data.frame(x=x, y=y, z=c)
p = ggplot(data = df, mapping = aes(x = x,y = z, fill = y)) + geom_bar(stat = 'identity', position = position_dodge(0.2), width = 0.15)
p + scale_x_continuous(breaks = seq(0, 3, 0.5)) + labs(title = "error comprison", x = "epsilon", y = "") + theme(panel.grid =element_blank())
p = ggplot(data = df, mapping = aes(x = x,y = z, fill = y)) + geom_bar(stat = 'identity', position = position_dodge(0.2), width = 0.15)
p
p + scale_x_continuous(breaks = seq(0, 3, 0.5)) + labs(title = "error comprison", x = "epsilon", y = "") + theme(panel.grid =element_blank())
p + labs(title = "error comprison", x = "epsilon", y = "") + theme(panel.grid =element_blank())
source('~/.active-rstudio-document', echo=TRUE)
source('~/Documents/Experiment/barplot_cmp.R', echo=TRUE)
source('~/Documents/Experiment/barplot_cmp.R', echo=TRUE)
source('~/Documents/Experiment/barplot_cmp.R', echo=TRUE)
source('~/Documents/Experiment/barplot_cmp.R', echo=TRUE)
eps
y
p = ggplot(data = df, mapping = aes(x = x,y = z, fill = y)) + geom_bar(stat = 'identity', aes(order = eps), position = position_dodge(0.2), width = 0.15)
p
p = ggplot(data = df, mapping = aes(x = x,y = z, fill = y)) + geom_bar(stat = 'identity', aes(order = y), position = position_dodge(0.2), width = 0.15)
p
p = ggplot(data = df, mapping = aes(x = x,y = z, fill = y)) + geom_bar(stat = 'identity', aes(order = y), position = position_dodge(0.2), width = 0.15)
p = ggplot(data = df, mapping = aes(x = x,y = z, fill = y)) + geom_bar(stat = 'identity', aes(order = y), position = position_dodge(0.2), width = 0.15)
p = ggplot(data = df, mapping = aes(x = x,y = z, fill = y)) + geom_bar(stat = 'identity', aes(order = y), position = position_dodge(0.2), width = 0.15)
p = ggplot(data = df, mapping = aes(x = x,y = z, fill = y)) + geom_bar(stat = 'identity', aes(order = y), position = position_dodge(0.2), width = 0.15)
p = ggplot(data = df, mapping = aes(x = x,y = z, fill = y)) + geom_bar(stat = 'identity', aes(order = y), position = position_dodge(0.2), width = 0.15)
p = ggplot(data = df, mapping = aes(x = x,y = z, fill = y)) + geom_bar(stat = 'identity', aes(order = y), position = position_dodge(0.2), width = 0.15)
p = ggplot(data = df, mapping = aes(x = x,y = z, fill = y)) + geom_bar(stat = 'identity', aes(order = y), position = position_dodge(0.2), width = 0.15)
p = ggplot(data = df, mapping = aes(x = x,y = z, fill = y)) + geom_bar(stat = 'identity', aes(order = y), position = position_dodge(0.2), width = 0.15)
p + labs(title = "error comprison", x = "epsilon", y = "") + theme(panel.grid =element_blank())
p = ggplot(data = df, mapping = aes(x = x,y = z, fill = y)) + geom_bar(stat = 'identity', aes(x = x), position = position_dodge(0.2), width = 0.15)
p + labs(title = "error comprison", x = "epsilon", y = "") + theme(panel.grid =element_blank())
df
df$order <- c(1,2,3,4,5,6)
df
p = ggplot(data = df, mapping = aes(x = x,y = z, fill = y)) + geom_bar(stat = 'identity', aes(x = order), data = df, position = position_dodge(0.2), width = 0.15)
p
p = ggplot(data = df, mapping = aes(x = x,y = z, fill = y)) + geom_bar(stat = 'identity', aes(x = order, fill = y), data = df, position = position_dodge(0.2), width = 0.15)
p
df$order <- factor(df$x, c("log(9)", "log(9)", "log(9)", "log(49)", "log(49)", "log(49)"))
df
p = ggplot(data = df, mapping = aes(x = x,y = z, fill = y)) + geom_bar(stat = 'identity', aes(x = order), data = df, position = position_dodge(0.2), width = 0.15)
p
df$order2 <- factor(df$y, c("sampling_Rappor", "basic_Rappor", "our_method","sampling_Rappor", "basic_Rappor", "our_method"))
p = ggplot(data = df, mapping = aes(x = x,y = z, fill = y)) + geom_bar(stat = 'identity', aes(x = order, fill = order2), data = df, position = position_dodge(0.2), width = 0.15)
p
source('~/Documents/Experiment/barplot_cmp.R', echo=TRUE)
p + labs(title = "error comprison", x = "epsilon") + theme(panel.grid =element_blank())
source('~/Documents/Experiment/barplot_cmp.R', echo=TRUE)
p + labs(title = "error comprison", x = "epsilon", y = "error") + theme(panel.grid =element_blank())
p + labs(title = "error comprison", x = "epsilon", y = "error") + theme(panel.grid =element_blank(), legend.title=element_blank())
p = ggplot(data = df, mapping = aes(x = x,y = z, fill = y)) + geom_bar(stat = 'identity', position = position_dodge(0.2), width = 0.15)
p + scale_x_continuous(breaks = seq(0, 3, 0.5)) + labs(title = "error comprison", x = "epsilon", y = "error") + theme(panel.grid =element_blank(),legend.title = element_blank())
source('~/Documents/Experiment/plot_bar.R', echo=TRUE)
source('~/Documents/Experiment/barplot_cmp.R', echo=TRUE)
df_1 = data.frame(x=x, y=y, z=c.cmp1)
df_1$order <- factor(df_1$x, rep(eps, each = 3))
df_1$order2 <- factor(df_1$y, rep(c("sampling_Rappor", "basic_Rappor", "our_method"), time=2))
p1 = ggplot(data = df_1, mapping = aes(x = x,y = z, fill = y)) + geom_bar(stat = 'identity', aes(x = order, fill = order2), data = df_1, position = position_dodge(0.2), width = 0.15)
p1 + labs(title = "error comprison", x = "epsilon", y = "error") + theme(panel.grid =element_blank(), legend.title=element_blank())
df_2 = data.frame(x=x, y=y, z=c.cmp2)
df_1$order <- factor(df_1$x, rep(eps, each = 3))
df_1$order2 <- factor(df_1$y, rep(c("sampling_Rappor", "basic_Rappor", "our_method"), time=2))
df_2$order <- factor(df_1$x, rep(eps, each = 3))
df_2$order2 <- factor(df_1$y, rep(c("sampling_Rappor", "basic_Rappor", "our_method"), time=2))
p2 = ggplot(data = df_1, mapping = aes(x = x,y = z, fill = y)) + geom_bar(stat = 'identity', aes(x = order, fill = order2), data = df_1, position = position_dodge(0.2), width = 0.15)
p2 + labs(title = "max error comprison", x = "epsilon", y = "max error") + theme(panel.grid =element_blank(), legend.title=element_blank())
p2 = ggplot(data = df_2, mapping = aes(x = x,y = z, fill = y)) + geom_bar(stat = 'identity', aes(x = order, fill = order2), data = df_2, position = position_dodge(0.2), width = 0.15)
p2 + labs(title = "max error comprison", x = "epsilon", y = "max error") + theme(panel.grid =element_blank(), legend.title=element_blank())
p1 = ggplot(data = df_1, mapping = aes(x = x,y = z, fill = y)) + geom_bar(stat = 'identity', aes(x = order, fill = order2), data = df_1, position = position_dodge(0.2), width = 0.15)
p1 + labs(title = "error comprison", x = "epsilon", y = "error") + theme(panel.grid =element_blank(), legend.title=element_blank())
opar <- par(no.readonly = TRUE)
par(lwd=2, cex=1.2)
plot(epsilon, mean_error, type="b", pch=15, lty=1, col="red", ylim=c(0, 0.12), main = "Error and Max Error", xlab = "Epsilon", ylab = "Error")
lines(epsilon, mean_max_error, type = "b", pch=16, lty=2, col="blue")
library(Hmisc)
minor.tick(nx=3, ny=3, tick.ratio = 0.5)
legend("topright", inset = .05, title = "Error Type", c("Error", "Max error"), lty=c(1, 2), pch = c(15, 16), col = c("red", "blue"))
par(opar)
source('~/Documents/Experiment/barplot_cmp.R', echo=TRUE)
p1
df_1
df_2
p1 = ggplot(data = df_1, mapping = aes(x = x,y = z, fill = y)) + geom_bar(stat = 'identity', aes(x = order, fill = order2), data = df_1, position = position_dodge(0.2), width = 0.15)
p1 + labs(title = "error comprison", x = "epsilon", y = "error") + theme(panel.grid =element_blank(), legend.title=element_blank())
p1 = ggplot(data = df_1, mapping = aes(x = x,y = z, fill = y)) + geom_bar(stat = 'identity', aes(x = order, fill = order2), data = df_1, position = position_dodge(0.2), width = 0.15)
p1
p1
p1 = ggplot(data = df_1, mapping = aes(x = x,y = z, fill = y)) + geom_bar(stat = 'identity', aes(x = order, fill = order2), data = df_1, position = position_dodge(0.2), width = 0.15)
p1
source('~/Documents/Experiment/barplot_cmp.R', echo=TRUE)
df_1 = data.frame(x=x, y=y, z=c.cmp1)
df_1$order <- factor(df_1$x, rep(eps, each = 3))
df_1$order2 <- factor(df_1$y, rep(c("sampling_Rappor", "basic_Rappor", "our_method"), time=2))
p1 = ggplot(data = df_1, mapping = aes(x = x, y = z, fill = y)) + geom_bar(stat = 'identity', aes(x = order, fill = order2), data = df_1, position = position_dodge(0.2), width = 0.15)
p1 + labs(title = "error comprison", x = "epsilon", y = "error") + theme(panel.grid =element_blank(), legend.title=element_blank())
getwd()
source('~/Documents/Experiment/barplot_cmp.R', echo=TRUE)
p1 = ggplot(data = df_1, mapping = aes(x = x, y = z, fill = y)) + geom_bar(stat = 'identity', aes(x = order, fill = order2), data = df_1, position = position_dodge(0.2), width = 0.15)
p1 + labs(title = "error comprison", x = "epsilon", y = "error") + theme(panel.grid =element_blank(), legend.title=element_blank())
p2 = ggplot(data = df_2, mapping = aes(x = x,y = z, fill = y)) + geom_bar(stat = 'identity', aes(x = order, fill = order2), data = df_2, position = position_dodge(0.2), width = 0.15)
p2 + labs(title = "max error comprison", x = "epsilon", y = "max error") + theme(panel.grid =element_blank(), legend.title=element_blank())
mean_ez_processed_0.5 <- mean(processed_ez(experiment_data_0.2))
experiment_data_1.0 = read.csv("result_1.0.csv",header = TRUE)
result_1.0 <- mean_for_error(experiment_data_1.0$error, experiment_data_1.0$max_error)
experiment_data_0.8 = read.csv("result_0.8.csv",header = TRUE)
result_0.8 <- mean_for_error(experiment_data_0.8$error, experiment_data_0.8$max_error)
experiment_data_0.6 = read.csv("result_0.6.csv",header = TRUE)
result_0.6 <- mean_for_error(experiment_data_0.6$error, experiment_data_0.6$max_error)
experiment_data_0.4 = read.csv("result_0.4.csv",header = TRUE)
result_0.4 <- mean_for_error(experiment_data_0.4$error, experiment_data_0.4$max_error)
experiment_data_0.2 = read.csv("result_0.2.csv",header = TRUE)
result_0.2 <- mean_for_error(experiment_data_0.2$error, experiment_data_0.2$max_error)
mean_ez_processed_0.2 <- mean(processed_ez(experiment_data_0.2))
mean_ez_processed_0.4 <- mean(processed_ez(experiment_data_0.4))
mean_ez_processed_0.6 <- mean(processed_ez(experiment_data_0.6))
mean_ez_processed_0.8 <- mean(processed_ez(experiment_data_0.8))
mean_ez_processed_1.0 <- mean(processed_ez(experiment_data_1.0))
mean_ez_error <- c(mean_ez_processed_0.2, mean_ez_processed_0.4, mean_ez_processed_0.6, mean_ez_processed_0.8, mean_ez_processed_1.0)
processed_data_1.0 = read.csv("result_consistency_1.0.csv",header = TRUE)
result_p_1.0 <- mean_for_error(processed_data_1.0$error, experiment_data_1.0$max_error)
processed_data_0.8 = read.csv("result_consistency_0.8.csv",header = TRUE)
result_p_0.8 <- mean_for_error(processed_data_0.8$error, experiment_data_0.8$max_error)
processed_data_0.6 = read.csv("result_consistency_0.6.csv",header = TRUE)
result_p_0.6 <- mean_for_error(processed_data_0.6$error, experiment_data_0.6$max_error)
processed_data_0.4 = read.csv("result_consistency_0.4.csv",header = TRUE)
result_p_0.4 <- mean_for_error(processed_data_0.4$error, experiment_data_0.4$max_error)
processed_data_0.2 = read.csv("result_consistency_0.2.csv",header = TRUE)
result_p_0.2 <- mean_for_error(processed_data_0.2$error, experiment_data_0.2$max_error)
mean_p_error <- c(result_p_0.2[1], result_p_0.4[1], result_p_0.6[1], result_p_0.8[1], result_p_1.0[1])
mean_error_small <- c(result_0.2[1], result_0.4[1], result_0.6[1], result_0.8[1], result_1.0[1])
mean_p_error
mean_error
mean_error_small
mean_ez_error
experiment_data_0.8 = read.csv("result_0.8.csv",header = TRUE)
result_0.8 <- mean_for_error(experiment_data_0.8$error, experiment_data_0.8$max_error)
experiment_data_0.6 = read.csv("result_0.6.csv",header = TRUE)
result_0.6 <- mean_for_error(experiment_data_0.6$error, experiment_data_0.6$max_error)
experiment_data_0.5 = read.csv("result_0.5.csv",header = TRUE)
result_0.5 <- mean_for_error(experiment_data_0.5$error, experiment_data_0.5$max_error)
experiment_data_0.4 = read.csv("result_0.4.csv",header = TRUE)
result_0.4 <- mean_for_error(experiment_data_0.4$error, experiment_data_0.4$max_error)
experiment_data_0.3 = read.csv("result_0.3.csv",header = TRUE)
result_0.3 <- mean_for_error(experiment_data_0.3$error, experiment_data_0.3$max_error)
experiment_data_0.2 = read.csv("result_0.2.csv",header = TRUE)
result_0.2 <- mean_for_error(experiment_data_0.2$error, experiment_data_0.2$max_error)
experiment_data_0.1 = read.csv("result_0.1.csv",header = TRUE)
result_0.1 <- mean_for_error(experiment_data_0.1$error, experiment_data_0.1$max_error)
mean_ez_processed_0.1 <- mean(processed_ez(experiment_data_0.1))
mean_ez_processed_0.2 <- mean(processed_ez(experiment_data_0.2))
mean_ez_processed_0.3 <- mean(processed_ez(experiment_data_0.3))
mean_ez_processed_0.4 <- mean(processed_ez(experiment_data_0.4))
mean_ez_processed_0.5 <- mean(processed_ez(experiment_data_0.5))
mean_ez_processed_0.1
mean_ez_processed_0.6 <- mean(processed_ez(experiment_data_0.6))
mean_ez_processed_0.8 <- mean(processed_ez(experiment_data_0.8))
mean_ez_error <- c(mean_ez_processed_0.1, mean_ez_processed_0.2, mean_ez_processed_0.3 ,mean_ez_processed_0.4, mean_ez_processed_0.5, mean_ez_processed_0.6, mean_ez_processed_0.8)
processed_data_0.8 = read.csv("result_consistency_0.8.csv",header = TRUE)
result_p_0.8 <- mean_for_error(processed_data_0.8$error, experiment_data_0.8$max_error)
processed_data_0.6 = read.csv("result_consistency_0.6.csv",header = TRUE)
result_p_0.6 <- mean_for_error(processed_data_0.6$error, experiment_data_0.6$max_error)
processed_data_0.5 = read.csv("result_consistency_0.5.csv",header = TRUE)
result_p_0.5 <- mean_for_error(processed_data_0.5$error, experiment_data_0.5$max_error)
processed_data_0.4 = read.csv("result_consistency_0.4.csv",header = TRUE)
result_p_0.4 <- mean_for_error(processed_data_0.4$error, experiment_data_0.4$max_error)
processed_data_0.3 = read.csv("result_consistency_0.3.csv",header = TRUE)
result_p_0.3 <- mean_for_error(processed_data_0.3$error, experiment_data_0.3$max_error)
processed_data_0.2 = read.csv("result_consistency_0.2.csv",header = TRUE)
result_p_0.2 <- mean_for_error(processed_data_0.2$error, experiment_data_0.2$max_error)
processed_data_0.1 = read.csv("result_consistency_0.1.csv",header = TRUE)
result_p_0.1 <- mean_for_error(processed_data_0.1$error, experiment_data_0.1$max_error)
mean_p_error <- c(result_p_0.1[1], result_p_0.2[1], result_p_0.3[1], result_p_0.4[1], result_p_0.5[1], result_p_0.6[1], result_p_0.8[1])
mean_error_small <- c(result_0.1[1], result_0.2[1], result_0.3[1], result_0.4[1], result_0.5[1], result_0.6[1], result_0.8[1])
mean_p_error
mean_ez_error
mean_ez_processed_0.1 <- mean(processed_ez(experiment_data_0.1))
mean_ez_processed_0.1
mean_error_small
eps2 <- c("0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.8")
x_3 = rep(eps2, each=3)
y_3 = rep(c("error", "sp_error", "p_error"), time=7)
c_3 = as.vector(rbind(mean_error_small, mean_ez_error, mean_p_error))
df_3 = data.frame(x=x_3, y=y_3, z=c_3)
df_3$order <- rep(eps2, each=3)
df_3$order2 <- rep(c("error", "sp_error", "p_error"), time=7)
p3 = ggplot(data = df_3, mapping = aes(x = x, y = z, fill = y)) + geom_bar(stat = 'identity', aes(x = order, fill = order2), data = df_3, position = position_dodge(0.2), width = 0.15)
p1 + labs(title = "error comprison", x = "epsilon", y = "error") + theme(panel.grid =element_blank(), legend.title=element_blank())
df_3
p3 + labs(title = "error comprison", x = "epsilon", y = "error") + theme(panel.grid =element_blank(), legend.title=element_blank())
mean_ez_error <- c(mean_ez_processed_0.2, mean_ez_processed_0.3 ,mean_ez_processed_0.4, mean_ez_processed_0.5, mean_ez_processed_0.6, mean_ez_processed_0.8)
mean_p_error <- c(result_p_0.2[1], result_p_0.3[1], result_p_0.4[1], result_p_0.5[1], result_p_0.6[1], result_p_0.8[1])
mean_error_small <- c(result_0.2[1], result_0.3[1], result_0.4[1], result_0.5[1], result_0.6[1], result_0.8[1])
eps2 <- c("0.2", "0.3", "0.4", "0.5", "0.6", "0.8")
x_3 = rep(eps2, each=3)
y_3 = rep(c("error", "sp_error", "p_error"), time=6)
c_3 = as.vector(rbind(mean_error_small, mean_ez_error, mean_p_error))
df_3 = data.frame(x=x_3, y=y_3, z=c_3)
df_3$order <- factor(df_3$x, rep(eps2, each=3))
df_3$order2 <- factor(df_3$y, rep(c("error", "sp_error", "p_error"), time=7))
p3 = ggplot(data = df_3, mapping = aes(x = x, y = z, fill = y)) + geom_bar(stat = 'identity', aes(x = order, fill = order2), data = df_3, position = position_dodge(0.2), width = 0.15)
p3 + labs(title = "error comprison", x = "epsilon", y = "error") + theme(panel.grid =element_blank(), legend.title=element_blank())
source('~/Documents/Experiment/negative_ez_process.R', echo=TRUE)
dev.off()
par(mfrow=c(2,1))
df_1 = data.frame(x=x, y=y, z=c.cmp1)
df_1$order <- factor(df_1$x, rep(eps, each = 3))
df_1$order2 <- factor(df_1$y, rep(c("sampling_Rappor", "basic_Rappor", "our_method"), time=2))
p1 = ggplot(data = df_1, mapping = aes(x = x, y = z, fill = y)) + geom_bar(stat = 'identity', aes(x = order, fill = order2), data = df_1, position = position_dodge(0.2), width = 0.15)
df_2 = data.frame(x=x, y=y, z=c.cmp2)
df_2$order <- factor(df_2$x, rep(eps, each = 3))
df_2$order2 <- factor(df_2$y, rep(c("sampling_Rappor", "basic_Rappor", "our_method"), time=2))
p1
p2 = ggplot(data = df_2, mapping = aes(x = x,y = z, fill = y)) + geom_bar(stat = 'identity', aes(x = order, fill = order2), data = df_2, position = position_dodge(0.2), width = 0.15)
p2 + labs(title = "max error comparison", x = "epsilon", y = "max error") + theme(panel.grid =element_blank(), legend.title=element_blank())
par(mfrow=c(2,1))
require(gridExtra)
grid.arrange(p1, p2, ncol=2)
p1 = ggplot(data = df_1, mapping = aes(x = x, y = z, fill = y)) + geom_bar(stat = 'identity', aes(x = order, fill = order2), data = df_1, position = position_dodge(0.2), width = 0.15)
p1 = p1 + labs(title = "error comparison", x = "epsilon", y = "error") + theme(panel.grid =element_blank(), legend.title=element_blank()) + guides(fill = FALSE)
df_2 = data.frame(x=x, y=y, z=c.cmp2)
df_2$order <- factor(df_2$x, rep(eps, each = 3))
df_2$order2 <- factor(df_2$y, rep(c("sampling_Rappor", "basic_Rappor", "our_method"), time=2))
p2 = ggplot(data = df_2, mapping = aes(x = x,y = z, fill = y)) + geom_bar(stat = 'identity', aes(x = order, fill = order2), data = df_2, position = position_dodge(0.2), width = 0.15)
p2 = p2 + labs(title = "max error comparison", x = "epsilon", y = "max error") + theme(panel.grid =element_blank(), legend.title=element_blank())
require(gridExtra)
grid.arrange(p1, p2, ncol=2)
p1 = p1 + labs(title = "error comparison", x = "epsilon", y = "error") + theme(panel.grid =element_blank(), legend.title=element_blank())
grid.arrange(p1, p2, ncol=2)
p1 = p1 + labs(title = "error comparison", x = "epsilon", y = "error") + theme(panel.grid =element_blank(), legend.title=element_blank())
p1 = ggplot(data = df_1, mapping = aes(x = x, y = z, fill = y)) + geom_bar(stat = 'identity', aes(x = order, fill = order2), data = df_1, position = position_dodge(0.2), width = 0.15)
p1 = p1 + labs(title = "error comparison", x = "epsilon", y = "error") + theme(panel.grid =element_blank(), legend.title=element_blank())
df_2 = data.frame(x=x, y=y, z=c.cmp2)
df_2$order <- factor(df_2$x, rep(eps, each = 3))
df_2$order2 <- factor(df_2$y, rep(c("sampling_Rappor", "basic_Rappor", "our_method"), time=2))
p2 = ggplot(data = df_2, mapping = aes(x = x,y = z, fill = y)) + geom_bar(stat = 'identity', aes(x = order, fill = order2), data = df_2, position = position_dodge(0.2), width = 0.15)
p2 = p2 + labs(title = "max error comparison", x = "epsilon", y = "max error") + theme(panel.grid =element_blank(), legend.title=element_blank())
require(gridExtra)
grid.arrange(p1, p2, ncol=2)
y = rep(c("sr", "br", "ours"), time=2)
df_1 = data.frame(x=x, y=y, z=c.cmp1)
df_1$order <- factor(df_1$x, rep(eps, each = 3))
df_1$order2 <- factor(df_1$y, rep(c("sr", "br", "ours"), time=2))
p1 = ggplot(data = df_1, mapping = aes(x = x, y = z, fill = y)) + geom_bar(stat = 'identity', aes(x = order, fill = order2), data = df_1, position = position_dodge(0.2), width = 0.15)
p1 = p1 + labs(title = "error comparison", x = "epsilon", y = "error") + theme(panel.grid =element_blank(), legend.title=element_blank())
df_2 = data.frame(x=x, y=y, z=c.cmp2)
df_2$order <- factor(df_2$x, rep(eps, each = 3))
df_2$order2 <- factor(df_2$y, rep(c("sr", "br", "ours"), time=2))
p2 = ggplot(data = df_2, mapping = aes(x = x,y = z, fill = y)) + geom_bar(stat = 'identity', aes(x = order, fill = order2), data = df_2, position = position_dodge(0.2), width = 0.15)
p2 = p2 + labs(title = "max error comparison", x = "epsilon", y = "max error") + theme(panel.grid =element_blank(), legend.title=element_blank())
require(gridExtra)
grid.arrange(p1, p2, ncol=2)
p1 = ggplot(data = df_1, mapping = aes(x = x, y = z, fill = y)) + geom_bar(stat = 'identity', aes(x = order, fill = order2), data = df_1, position = position_dodge(0.2), width = 0.15)
p1 = p1 + labs(x = "epsilon", y = "error") + theme(panel.grid =element_blank(), legend.title=element_blank())
p2 = ggplot(data = df_2, mapping = aes(x = x,y = z, fill = y)) + geom_bar(stat = 'identity', aes(x = order, fill = order2), data = df_2, position = position_dodge(0.2), width = 0.15)
p2 = p2 + labs(x = "epsilon", y = "max error") + theme(panel.grid =element_blank(), legend.title=element_blank())
grid.arrange(p1, p2, ncol=2)
mean_error
sort(mean_error)
cumulative <- function(x){
y <- c()
for(i in 1:length(x)){
if(i==1){
y[length(y) + 1] <- x[i]
}
else{y[length(y) + 1] <-x[i] + x[i - 1]}
return(y)
}
}
cumulative(mean_error)
length(mean_error)
cumulative <- function(x){
y <- c()
for(i in 1:length(x)){
if(i == 1){
y[length(y) + 1] <- x[i]
}
else{
y[length(y) + 1] <- x[i] + x[i - 1]
}
}
return(y)
}
cumulative(sort(mean_error))
x <- c(1,2,3,4,5)
c_error <- cumulative(sort(mean_error))
plot(x, c_error, type="b", pch=15, lty=1, col="red", ylim=c(0, 0.12), main = "Error and Max Error", xlab = "Epsilon", ylab = "Error")
plot(x, c_error, type="b", pch=15, lty=1, col="red", main = "Error and Max Error", xlab = "Epsilon", ylab = "Error")
lines(x = 4)
cumulative <- function(x){
sum.fans <- sum(x)
y <- c()
for(i in 1:length(x)){
if(i == 1){
y[i] <- x[i] / sum.fans
}
else{
y[i] <- (x[i] + x[i - 1]) / sum.fans
}
}
return(y)
}
c_error <- cumulative(sort(mean_error))
c_error
source('~/.active-rstudio-document', echo=TRUE)
c_error <- cumulative(sort(mean_error))
c_error
sum(sort(mean_error))
for i in 1:5
cumulative <- function(x){
sum.fans <- sum(x)
y <- c()
for(i in 1:length(x)){
if(i == 1){
y[i] <- x[i] / sum.fans
}
else{
y[i] <- (y[i - 1] + x[i]) / sum.fans
}
}
return(y)
}
cumulative(c(1,2,3,4,5))
sum(c(1,2,3,4,5))
1/15
3/15
source('~/.active-rstudio-document', echo=TRUE)
c_error <- cumulative(sort(mean_error))
c_error
x <- c(c(2,3), c(4,4), c(6,5), c(8,6), c(9,7), c(13, 10), c(15, 11), c(17, 12), c(19, 13))
x
x <- c("(2,3)", "(4,4)", "(6,5)", "(8,6)", "(9,7)", "(13, 10)", "(15, 11)", "(17, 12)", "(19, 13)")
x
y.1 <- c(0.6, 0.571, 0.556, 0.545, 0.538, 0.526, 0.524, 0.522, 0.52)
y.2 <- c(0.667, 0.625, 0.583, 0.563, 0.571, 0.554, 0.545, 0.544, 0.538)
opar <- par(no.readonly = TRUE)
par(lwd=2, cex=1.2)
plot(x, y.1, type="b", pch=15, lty=1, lwd=3, col="red", ylim=c(0, 0.12), main = "Error and Max Error", xlab = "Epsilon", ylab = "Error")
opar <- par(no.readonly = TRUE)
par(lwd=3, cex=1.2)
plot(x, y.1, type="b", pch=15, lty=1, col="red", main = "Error and Max Error", xlab = "Epsilon", ylab = "Error")
plot(x, y.1, type="b", pch=15, lty=1, col="red", xlab = "(n, t)", ylab = "R_m(n, t)")
plot(y.1, type="b", pch=15, lty=1, col="red", xlab = "(n, t)", ylab = "R_m(n, t)")
par(no.readonly = FALSE)
plot(x, y.1, type="b", pch=15, lty=1, lwd=3, col="red", main = "Error and Max Error", xlab = "Epsilon", ylab = "Error")
plot(y.1, type="b", pch=15, lty=1, lwd=3, col="red", main = "Error and Max Error", xlab = "Epsilon", ylab = "Error")
par(mfrow=c(1,1))
plot(y.1, type="b", pch=15, lty=1, lwd=3, col="red", main = "Error and Max Error", xlab = "Epsilon", ylab = "Error")
