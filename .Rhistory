lines(c(0,r)~c(0,v))
plot(vars, means, pch=20,xlim = c(0,0.062),ylim = c(-0.012,0.023))
text(vars, means, market.labels)
lines(std.combine(w,Nikko.return.rate[82:100],Sharp.return.rate[82:100]),mean.combine(w,Nikko.return.rate[82:100],Sharp.return.rate[82:100]))
lines(std.combine(w,Nikko.return.rate[82:100],Pioneer.return.rate[82:100]),mean.combine(w,Nikko.return.rate[82:100],Pioneer.return.rate[82:100]))
lines(std.combine(w,Nikko.return.rate[82:100],Honda.return.rate[82:100]),mean.combine(w,Nikko.return.rate[82:100],Honda.return.rate[82:100]))
lines(std.combine(w,Nikko.return.rate[82:100],Nomura.return.rate[82:100]),mean.combine(w,Nikko.return.rate[82:100],Nomura.return.rate[82:100]))
lines(std.combine(w,Honda.return.rate[82:100],Sharp.return.rate[82:100],mean.combine(w,Honda.return.rate[82:100],Sharp.return.rate[82:100]))
lines(std.combine(w,Honda.return.rate[82:100],Pioneer.return.rate[82:100]),mean.combine(w,Honda.return.rate[82:100],Pioneer.return.rate[82:100]))
lines(std.combine(w,Honda.return.rate[82:100],Nomura.return.rate[82:100]),mean.combine(w,Honda.return.rate[82:100],Nomura.return.rate[82:100]))
lines(std.combine(w,Nomura.return.rate[82:100],Pioneer.return.rate[82:100]),mean.combine(w,Nomura.return.rate[82:100],Pioneer.return.rate[82:100]))
lines(std.combine(w,Sharp.return.rate[82:100],Nomura.return.rate[82:100]),mean.combine(w,Sharp.return.rate[82:100],Nomura.return.rate[82:100]))
lines(std.combine(w,Sharp.return.rate[82:100],Pioneer.return.rate[82:100]),mean.combine(w,Sharp.return.rate[82:100],Pioneer.return.rate[82:100]))
lines(std.combine(w,Honda.return.rate[82:100],Pioneer.return.rate[82:100]),mean.combine(w,Honda.return.rate[82:100],Pioneer.return.rate[82:100]))
lines(c(0,r)~c(0,v))
r/v
vars <- c(sqrt(var(Honda.return.rate[101:122])),sqrt(var(Sharp.return.rate[101:122])),sqrt(var(Nikko.return.rate[101:122])),sqrt(var(Nomura.return.rate[101:122])),sqrt(var(Pioneer.return.rate[101:122])))
means <- c(mean(Honda.return.rate[101:122]),mean(Sharp.return.rate[101:122]),mean(Nikko.return.rate[101:122]),mean(Nomura.return.rate[101:122]),mean(Pioneer.return.rate[101:122]))
plot(vars, means, pch=20)
text(vars, means, market.labels)
lines(std.combine(w,Nikko.return.rate[101:122],Sharp.return.rate[101:122]),mean.combine(w,Nikko.return.rate[101:122],Sharp.return.rate[101:122]))
lines(std.combine(w,Nikko.return.rate[101:122],Pioneer.return.rate[101:122]),mean.combine(w,Nikko.return.rate[101:122],Pioneer.return.rate[101:122]))
lines(std.combine(w,Nikko.return.rate[101:122],Honda.return.rate[101:122]),mean.combine(w,Nikko.return.rate[101:122],Honda.return.rate[101:122]))
lines(std.combine(w,Nikko.return.rate[101:122],Nomura.return.rate[101:122]),mean.combine(w,Nikko.return.rate[101:122],Nomura.return.rate[101:122]))
lines(std.combine(w,Honda.return.rate[101:122],Sharp.return.rate[101:122],mean.combine(w,Honda.return.rate[101:122],Sharp.return.rate[101:122]))
lines(std.combine(w,Honda.return.rate[101:122],Pioneer.return.rate[101:122]),mean.combine(w,Honda.return.rate[101:122],Pioneer.return.rate[101:122]))
lines(std.combine(w,Honda.return.rate[101:122],Nomura.return.rate[101:122]),mean.combine(w,Honda.return.rate[101:122],Nomura.return.rate[101:122]))
lines(std.combine(w,Nomura.return.rate[101:122],Pioneer.return.rate[101:122]),mean.combine(w,Nomura.return.rate[101:122],Pioneer.return.rate[101:122]))
lines(std.combine(w,Sharp.return.rate[101:122],Nomura.return.rate[101:122]),mean.combine(w,Sharp.return.rate[101:122],Nomura.return.rate[101:122]))
lines(std.combine(w,Sharp.return.rate[101:122],Pioneer.return.rate[101:122],mean.combine(w,Sharp.return.rate[101:122],Pioneer.return.rate[101:122]))
ss
w <- seq(0,1,length.out=100)
lines(std.combine(w,Nikko.return.rate[101:122],Sharp.return.rate[101:122]),mean.combine(w,Nikko.return.rate[101:122],Sharp.return.rate[101:122]))
lines(std.combine(w,Nikko.return.rate[101:122],Pioneer.return.rate[101:122]),mean.combine(w,Nikko.return.rate[101:122],Pioneer.return.rate[101:122]))
lines(std.combine(w,Nikko.return.rate[101:122],Honda.return.rate[101:122]),mean.combine(w,Nikko.return.rate[101:122],Honda.return.rate[101:122]))
lines(std.combine(w,Nikko.return.rate[101:122],Nomura.return.rate[101:122]),mean.combine(w,Nikko.return.rate[101:122],Nomura.return.rate[101:122]))
lines(std.combine(w,Honda.return.rate[101:122],Sharp.return.rate[101:122],mean.combine(w,Honda.return.rate[101:122],Sharp.return.rate[101:122]))
lines(std.combine(w,Honda.return.rate[101:122],Pioneer.return.rate[101:122]),mean.combine(w,Honda.return.rate[101:122],Pioneer.return.rate[101:122]))
lines(std.combine(w,Honda.return.rate[101:122],Nomura.return.rate[101:122]),mean.combine(w,Honda.return.rate[101:122],Nomura.return.rate[101:122]))
lines(std.combine(w,Nomura.return.rate[101:122],Pioneer.return.rate[101:122]),mean.combine(w,Nomura.return.rate[101:122],Pioneer.return.rate[101:122]))
lines(std.combine(w,Sharp.return.rate[101:122],Nomura.return.rate[101:122]),mean.combine(w,Sharp.return.rate[101:122],Nomura.return.rate[101:122]))
lines(std.combine(w,Sharp.return.rate[101:122],Pioneer.return.rate[101:122],mean.combine(w,Sharp.return.rate[101:122],Pioneer.return.rate[101:122]))
plot(vars, means, pch=20)
plot(vars, means, pch=20)
text(vars, means, market.labels)
lines(std.combine(w,Nikko.return.rate[101:122],Sharp.return.rate[101:122]),mean.combine(w,Nikko.return.rate[101:122],Sharp.return.rate[101:122]))
lines(std.combine(w,Nikko.return.rate[101:122],Pioneer.return.rate[101:122]),mean.combine(w,Nikko.return.rate[101:122],Pioneer.return.rate[101:122]))
lines(std.combine(w,Nikko.return.rate[101:122],Honda.return.rate[101:122]),mean.combine(w,Nikko.return.rate[101:122],Honda.return.rate[101:122]))
lines(std.combine(w,Nikko.return.rate[101:122],Nomura.return.rate[101:122]),mean.combine(w,Nikko.return.rate[101:122],Nomura.return.rate[101:122]))
lines(std.combine(w,Honda.return.rate[101:122],Sharp.return.rate[101:122],mean.combine(w,Honda.return.rate[101:122],Sharp.return.rate[101:122]))
lines(std.combine(w,Honda.return.rate[101:122],Pioneer.return.rate[101:122]),mean.combine(w,Honda.return.rate[101:122],Pioneer.return.rate[101:122]))
lines(std.combine(w,Honda.return.rate[101:122],Nomura.return.rate[101:122]),mean.combine(w,Honda.return.rate[101:122],Nomura.return.rate[101:122]))
lines(std.combine(w,Nomura.return.rate[101:122],Pioneer.return.rate[101:122]),mean.combine(w,Nomura.return.rate[101:122],Pioneer.return.rate[101:122]))
lines(std.combine(w,Sharp.return.rate[101:122],Nomura.return.rate[101:122]),mean.combine(w,Sharp.return.rate[101:122],Nomura.return.rate[101:122]))
lines(std.combine(w,Sharp.return.rate[101:122],Pioneer.return.rate[101:122],mean.combine(w,Sharp.return.rate[101:122],Pioneer.return.rate[101:122]))
sd
lines(std.combine(w,Honda.return.rate[101:122],Pioneer.return.rate[101:122]),mean.combine(w,Honda.return.rate[101:122],Pioneer.return.rate[101:122]))
price.count <- function(r,i){}
View(get.return.rate)
price.count <- function(r,n,c,F){
coupon.sum <- 0
for(i in 1:n){
coupon.sum <- c/(1+r)^i + coupon.sum
}
return(coupon.sum + F/(1+r)^n)
}
price.count(5,5,5,100)
price.count(5,5,0.05,100)
price.count(0.05,5,5,100)
price.count <- function(r,n,c,F){
coupon.sum <- 0
for(i in 1:n){
coupon.sum <- c/(1+r)^i + coupon.sum
print(coupon.sum)
}
return(coupon.sum + F/(1+r)^n)
}
price.count(0.05,5,5,100)
price.count <- function(r,n,c,F){
coupon.sum <- 0
for(i in 1:n){
coupon.sum <- c/(1+r)^i + coupon.sum
print(coupon.sum)
}
print(F/(1+r)^n)
return(coupon.sum + F/(1+r)^n)
}
price.count(0.05,5,5,100)
price.count(0.06,5,5,100)
price.count <- function(r,c,F){
coupon.sum <- 0
prod. <- 1
for(i in 1:length(r)){
coupon.sum <- c/(1+r[i])^i + coupon.sum
prod. <- (1+r[i])*prod.
print(coupon.sum)
}
print(F/prod.)
return(coupon.sum + F/prod.)
}
r <- c(0.01,0.03,0.04,0.05,0.05)
price.count(r,3,100)
price.count <- function(r,c,F){
coupon.sum <- 0
for(i in 1:length(r)){
coupon.sum <- c/(1+r[i])^i + coupon.sum
}
print(F/((1+r[length(r)])^5))
return(coupon.sum + F/((1+r[length(r)])^5))
}
price.count(r,3,100)
View(price.count)
modified.duration <- function(r,c,F){
coupon.sum <- 0
for(i in 1:length(r)){
coupon.sum <- i/(1+r[i])^(i+1) + coupon.sum
}
print(nF/((1+r[length(r)])^(length(r)+1)))
return(c*coupon.sum + nF/((1+r[length(r)])^(length(r)+1))
}
modified.duration <- function(r,c,F){
coupon.sum <- 0
for(i in 1:length(r)){
coupon.sum <- i/(1+r[i])^(i+1) + coupon.sum
}
print(nF/((1+r[length(r)])^(length(r)+1)))
return(c*coupon.sum + nF/((1+r[length(r)])^(length(r)+1))
}
modified.duration <- function(r,c,F){
coupon.sum <- 0
for(i in 1:length(r)){
coupon.sum <- i/(1+r[i])^(i+1) + coupon.sum
}
print(nF/((1+r[length(r)])^(length(r)+1)))
return(c*coupon.sum + nF/((1+r[length(r)])^(length(r)+1))}
modified.duration <- function(r,c,F){
coupon.sum <- 0
for(i in 1:length(r)){
coupon.sum <- i/(1+r[i])^(i+1) + coupon.sum
}
print(nF/((1+r[length(r)])^(length(r)+1)))
return(c*coupon.sum + nF/((1+r[length(r)])^(length(r)+1)))}
modified.duration(r, 3, 100)
modified.duration <- function(r,c,F){
coupon.sum <- 0
for(i in 1:length(r)){
coupon.sum <- i/(1+r[i])^(i+1) + coupon.sum
}
print(n*F/((1+r[length(r)])^(length(r)+1)))
return(c*coupon.sum + n*F/((1+r[length(r)])^(length(r)+1)))}
modified.duration(r, 3, 100)
modified.duration <- function(r,c,F){
n <- length(r)
coupon.sum <- 0
for(i in 1:n){
coupon.sum <- i/(1+r[i])^(i+1) + coupon.sum
}
print(n*F/((1+r[n])^(n+1)))
return(c*coupon.sum + n*F/((1+r[n])^(length(n)+1)))}
modified.duration(r, 3, 100)
modified.duration <- function(r,c,F){
n <- length(r)
coupon.sum <- 0
for(i in 1:n){
coupon.sum <- i/(1+r[i])^(i+1) + coupon.sum
print(coupon.sum)
}
print(n*F/((1+r[n])^(n+1)))
return(c*coupon.sum + n*F/((1+r[n])^(length(n)+1)))}
modified.duration(r, 3, 100)
modified.duration <- function(r,c,F){
n <- length(r)
coupon.sum <- 0
for(i in 1:n){
coupon.sum <- i/(1+r[i])^(i+1) + coupon.sum
print(coupon.sum)
}
print(n*F/((1+r[n])^(n+1)))
return(c*coupon.sum + n*F/((1+r[n])^(n+1)))}
modified.duration(r, 3, 100)
View(modified.duration)
View(modified.duration)
convexity <- function(r,c,F){
n <- length(r)
coupon.sum <- 0
for(i in 1:n){
coupon.sum <- i*(i+1)/(1+r[i])^(i+2) + coupon.sum
print(coupon.sum)
}
print(n*(n+1)*F/((1+r[n])^(n+2)))
return(c*coupon.sum + n*(n+1)*F/((1+r[n])^(n+2)))}
convexity(r,3,100)
r <- c(0)
r <- c(0.02,0.04,0.05,0.06,0.06)
View(price.count)
price.count(r,3,100)
r <- c(0,0.01,0.03,0.04,0.04)
price.count(r,3,100)
95.90922 - 91.636
100/10^9
5/(1.03)^3
-4.098 + 25.014*(0.01)^2*91.636
-4.098 + 25.014*(0.01)^2*91.636*0.5
4.098 + 25.014*(0.01)^2*91.636*0.5
4*(1.03)^3
4*(1.03)^3+4.576
5/1.03
1.5/1.03
4.854+1.456
6.31*0.5
1.456*0.5/1.03
3.155/1.03
(3.063+0.707)*0.5/1.03
10 - 1.830 - 3.661
4.509 / 5 * 10 ^2
100/1.03^3
91.51417 - 0.0153
exit()
quit()
5^23 mod 133
5^23%133
5**2 % 77
5**2 & 77
5**2%%77
25**2%%77
9**2%%77
4**2%%77
16**2%%77
25*4*25*5*20 %% 77
(25*4*25*5*20) %% 77
58**2
58**2 %% 77
53**2 %% 77
53*37*58 %% 77
(53*37*58) %% 77
(9*31) %% 77
20 ** 7 %% 77
ls
dir()
getwd()
setwd("/Users/summer/Documents/Experiment")
getwd()
experiment_data = read.csv("result_sampling_rappor.csv",header = TRUE)
View(experiment_data)
error <- experiment_data["error"]
error
mean(error)
max_error <- experiment_data["max_error"]
error <- na.omit(experiment_data["error"])
error
max_error <- na.omit(experiment_data["max_error"])
mean_error <- mean(error)
mean_error <- mean(error, na.rm = TRUE)
max_error <- na.omit(max_error)
max_error
max_error <- na.rm(max_error)
mean_error <- mean(error, na.rm=T)
mean_error <- sum(error, na.rm=T)
mean_error <- mean_error / length(error)
mean_error
length(error)
error
error <- experiment_data$error
error
mean_error <- mean(error, na.rm = TRUE)
mean_error
max_error <- experiment_data$max_error
mean_max_error <- mean(max_error, na.rm = TRUE)
mean_max_error
mean_error_2.0 <- mean_error
mean_max_error_2.0 <- mean_max_error
log_mean_max_error_2.0 <- log(mean_max_error)
log_mean_max_error_2.0
log_mean_error_2.0 <- log(mean_error)
log_mean <- function(mean_error, mean_max_error){}
log_mean <- function(error, max_error){
mean_e <- log(mean(error))
mean_me <- log(mean(max_error))
mean_e, meam_me
}
log_mean <- function(error, max_error){
mean_e <- log(mean(error))
mean_me <- log(mean(max_error))
c(mean_e, meam_me)
}
experiment_data_2.5 = read.csv("result_sampling_rappor_2.5.csv",header = TRUE)
View(experiment_data_2.5)
View(experiment_data_2.5)
View(log_mean)
View(log_mean)
View(log_mean)
log_mean <- function(error, max_error){
mean_e <- log(mean(error, na.rm = T))
mean_me <- log(mean(max_error, na.rm = T))
c(mean_e, meam_me)
}
c(log_mean_error_2.5,log_mean_max_error_2.5) <- log_mean(experiment_data_2.5$error, experiment_data_2.5$max_error)
log_mean <- function(error, max_error){
mean_e <- log(mean(error, na.rm = T))
mean_me <- log(mean(max_error, na.rm = T))
c(mean_e, mean_me)
}
c(log_mean_error_2.5,log_mean_max_error_2.5) <- log_mean(experiment_data_2.5$error, experiment_data_2.5$max_error)
result_2.5 <- log_mean(experiment_data_2.5$error, experiment_data_2.5$max_error)
result_2.5
result_2.0 <- c(log_mean_error_2.0, log_mean_max_error_2.0)
result_2.0
experiment_data_1.5 = read.csv("result_sampling_rappor_1.5.csv",header = TRUE)
result_1.5 <- log_mean(experiment_data_1.5$error, experiment_data_1.5$max_error)
result_1.5
experiment_data_1.0 = read.csv("result_sampling_rappor_1.0.csv",header = TRUE)
result_1.0 <- log_mean(experiment_data_1.0$error, experiment_data_1.0$max_error)
result_1.0
experiment_data_0.5 = read.csv("result_sampling_rappor_0.5.csv",header = TRUE)
result_0.5 <- log_mean(experiment_data_0.5$error, experiment_data_0.5$max_error)
result_0.5
result_0.5[1]
mean_error <- c(result_0.5[1], result_1.0[1], result_1.5[1], result_2.0[1], result_2.5[1])
mean_max_error <- c(result_0.5[2], result_1.0[2], result_1.5[2], result_2.0[2], result_2.5[2])
epsilon <- c(0.5, 1.0, 1.5, 2.0, 2.5)
opar <- par(no.readonly = TRUE)
par(lwd=2, cex=1.5, font.lab=2)
plot(epsilon, mean_error, type="b", pch=15, lty=1, col="red", ylim=c(-5, 0), main = "Error and Max Error", xlab = "Epsilon", ylab = "Error (log)")
plot(epsilon, mean_error, type="a", pch=15, lty=1, col="red", ylim=c(-5, 0), main = "Error and Max Error", xlab = "Epsilon", ylab = "Error (log)")
plot(epsilon, mean_error, type="c", pch=15, lty=1, col="red", ylim=c(-5, 0), main = "Error and Max Error", xlab = "Epsilon", ylab = "Error (log)")
plot(epsilon, mean_error, type="b", pch=15, lty=1, col="red", ylim=c(-5, 0), main = "Error and Max Error", xlab = "Epsilon", ylab = "Error (log)")
lines(epsilon, mean_max_error, type = "b", pch=17, lty=2, col="blue")
lines(epsilon, mean_max_error, type = "b", pch=17, lty=3, col="blue")
lines(epsilon, mean_max_error, type = "b", pch=17, lty=4, col="blue")
lines(epsilon, mean_max_error, type = "b", pch=17, lty=2, col="blue")
lines(epsilon, mean_max_error, type = "b", pch=16, lty=2, col="blue")
plot(epsilon, mean_error, type="b", pch=15, lty=1, col="red", ylim=c(-5, 0), main = "Error and Max Error", xlab = "Epsilon", ylab = "Error (log)")
lines(epsilon, mean_max_error, type = "b", pch=16, lty=2, col="blue")
abline(h=c(30), lwd=1.5, lty=2, col="gray")
abline(h=c(30), lwd=1.5, lty=2, col="gray")
abline(h=c(-3), lwd=1.5, lty=2, col="gray")
library(Hmisc)
library(Hmisc)
minor.tick(nx=3, ny=3, tick.ratio = 0.5)
legend("topleft", inset = .05, title title = "Error Type", c("Error", "Max error"), lty=c(1, 2), pch = c(15, 16), col = c("red", "blue"))
legend("topleft", inset = .05, title = "Error Type", c("Error", "Max error"), lty=c(1, 2), pch = c(15, 16), col = c("red", "blue"))
legend("topright", inset = .05, title = "Error Type", c("Error", "Max error"), lty=c(1, 2), pch = c(15, 16), col = c("red", "blue"))
plot(epsilon, mean_error, type="b", pch=15, lty=1, col="red", ylim=c(-5, 0), main = "Error and Max Error", xlab = "Epsilon", ylab = "Error (log)")
lines(epsilon, mean_max_error, type = "b", pch=16, lty=2, col="blue")
legend("topright", inset = .05, title = "Error Type", c("Error", "Max error"), lty=c(1, 2), pch = c(15, 16), col = c("red", "blue"))
par(opar)
jpeg(filename = "test.jpeg")
dev.off
dev.off()
getwd()
jpeg(filename = "test.jpeg")
dev.off()
par(opar)
experiment_data_2.5 = read.csv("result_sampling_rappor_2.5.csv",header = TRUE)
result_2.5 <- log_mean(experiment_data_2.5$error, experiment_data_2.5$max_error)
experiment_data_2.0 = read.csv("result_sampling_rappor_2.0.csv",header = TRUE)
result_2.0 <- log_mean(experiment_data_2.0$error, experiment_data_2.0$max_error)
experiment_data_1.5 = read.csv("result_sampling_rappor_1.5.csv",header = TRUE)
result_1.5 <- log_mean(experiment_data_1.5$error, experiment_data_1.5$max_error)
experiment_data_1.0 = read.csv("result_sampling_rappor_1.0.csv",header = TRUE)
result_1.0 <- log_mean(experiment_data_1.0$error, experiment_data_1.0$max_error)
result_1.0 <- log_mean(experiment_data_1.0$error, experiment_data_1.0$max_error)
result_1.0 <- log_mean(experiment_data_1.0$error, experiment_data_1.0$max_error)
result_1.0 <- log_mean(experiment_data_1.0$error, experiment_data_1.0$max_error)
experiment_data_0.5 = read.csv("result_sampling_rappor_0.5.csv",header = TRUE)
experiment_data_2.5 = read.csv("result_sampling_rappor_2.5.csv",header = TRUE)
result_2.5 <- log_mean(experiment_data_2.5$error, experiment_data_2.5$max_error)
experiment_data_2.0 = read.csv("result_sampling_rappor_2.0.csv",header = TRUE)
result_2.0 <- log_mean(experiment_data_2.0$error, experiment_data_2.0$max_error)
experiment_data_1.5 = read.csv("result_sampling_rappor_1.5.csv",header = TRUE)
result_1.5 <- log_mean(experiment_data_1.5$error, experiment_data_1.5$max_error)
experiment_data_1.0 = read.csv("result_sampling_rappor_1.0.csv",header = TRUE)
result_1.0 <- log_mean(experiment_data_1.0$error, experiment_data_1.0$max_error)
experiment_data_0.5 = read.csv("result_sampling_rappor_0.5.csv",header = TRUE)
result_0.5 <- log_mean(experiment_data_0.5$error, experiment_data_0.5$max_error)
mean_error <- c(result_0.5[1], result_1.0[1], result_1.5[1], result_2.0[1], result_2.5[1])
mean_max_error <- c(result_0.5[2], result_1.0[2], result_1.5[2], result_2.0[2], result_2.5[2])
epsilon <- c(0.5, 1.0, 1.5, 2.0, 2.5)
opar <- par(no.readonly = TRUE)
par(lwd=2, cex=1.5, font.lab=2)
plot(epsilon, mean_error, type="b", pch=15, lty=1, col="green", ylim=c(-5, 0), main = "Error and Max Error", xlab = "Epsilon", ylab = "Error (log)")
lines(epsilon, mean_max_error, type = "b", pch=16, lty=2, col="blue")
library(Hmisc)
minor.tick(nx=3, ny=3, tick.ratio = 0.5)
legend("topright", inset = .05, title = "Error Type", c("Error", "Max error"), lty=c(1, 2), pch = c(15, 16), col = c("red", "blue"))
par(opar)
legend("topright", inset = .05, title = "Error Type", c("Error", "Max error"), lty=c(1, 2), pch = c(15, 16), col = c("green", "blue"))
opar <- par(no.readonly = TRUE)
par(lwd=2, cex=1.5, font.lab=2)
plot(epsilon, mean_error, type="b", pch=15, lty=1, col="green", ylim=c(-5, 0), main = "Error and Max Error", xlab = "Epsilon", ylab = "Error (log)")
lines(epsilon, mean_max_error, type = "b", pch=16, lty=2, col="blue")
library(Hmisc)
minor.tick(nx=3, ny=3, tick.ratio = 0.5)
legend("topright", inset = .05, title = "Error Type", c("Error", "Max error"), lty=c(1, 2), pch = c(15, 16), col = c("green", "blue"))
par(opar)
source('~/Documents/Experiment/plot_line.R', echo=TRUE)
source('~/Documents/Experiment/plot_line.R', echo=TRUE)
source('~/Documents/Experiment/plot_line.R', echo=TRUE)
source('~/Documents/Experiment/plot_line.R', echo=TRUE)
source('~/Documents/Experiment/plot_line.R', echo=TRUE)
source('~/Documents/Experiment/plot_line.R', echo=TRUE)
library(ggplot2)
dv1 <- c(epsilon, mean_error, mean_max_error)
dtable <- table(dv1)
dtable
dv1
matrix(dv1, nrow = 5, ncol = 3)
dv1 <- matrix(dv1, nrow = 5, ncol = 3)
dtable <- table(dv1)
dtable
dv1[1,1]
dtable <- data.frame(dv1)
dtable
p <- ggplot(data = dtable)
p + geom_bar(position = 'dodge')
p <- ggplot(data = dtable, aes=(x=X1))
p + geom_bar(position = 'dodge')
x <- rep(epsilon, each=3)
y <- rep(c("log(error)", "log(max_error)"), times = 5)
seed <- round(runif(min = 10, max = 20, n = 15))
seed
y
df <- data.frame(x=x, y=y, z=z)
df <- data.frame(x=x, y=y, z=seed)
seed <- round(runif(min = 10, max = 20, n = 10))
seed
df <- data.frame(x=x, y=y, z=seed)
x <- rep(epsilon, each=2)
x
df <- data.frame(x=x, y=y, z=seed)
ggplot(data = df, mapping = aes(x = factor(x), y = z,fill = y)) + geom_bar(stat = 'identity', position = 'dodge')
dv = c(mean_error, mean_max_error)
dtable = table(matrix(dv, nrow = 5, ncol = 2))
dtable
dtable = data.frame(matrix(dv, nrow = 5, ncol = 2))
dtable
df <- data.frame(x=x, y=y, z=dtable)
ggplot(data = df, mapping = aes(x = factor(x), y = z,fill = y)) + geom_bar(stat = 'identity', position = 'dodge')
with(mpg,table(class,year))
df
ggplot(data = df, mapping = aes(x = factor(x), fill = y)) + geom_bar(stat = 'identity', position = 'dodge')
ggplot(data = df, mapping = aes(x = factor(x), y = z)) + geom_bar(stat = 'identity', position = 'dodge')
vector(dtable)
dtable = matrix(dv, nrow = 5, ncol = 2)
dtable
cbind(mean_error, mean_max_error)
c = cbind(mean_error, mean_max_error)
c
df <- data.frame(x=x, y=y, z=c)
df
c = rbind(mean_error, mean_max_error)
c
c = as.vector(c)
c
df <- data.frame(x=x, y=y, z=c)
df
ggplot(data = df, mapping = aes(x = factor(x), y = z, fill = y)) + geom_bar(stat = 'identity', position = 'dodge')
source('~/Documents/Experiment/plot_line.R', echo=TRUE)
c = rbind(mean_error, mean_max_error)
df
df <- data.frame(x=x, y=y, z=c)
df
c = rbind(mean_error, mean_max_error)
c
mean_error
result_0.5
function(error, max_error){
mean_e <- mean(error, na.rm = T)
mean_me <- mean(max_error, na.rm = T)
c(mean_e, mean_me)
}
mean_for_error <- function(error, max_error){
mean_e <- mean(error, na.rm = T)
mean_me <- mean(max_error, na.rm = T)
c(mean_e, mean_me)
}
View(mean_for_error)
View(mean_for_error)
source('~/Documents/Experiment/plot_line.R', echo=TRUE)
source('~/Documents/Experiment/plot_line.R', echo=TRUE)
c = rbind(mean_error, mean_max_error)
c
c <- as.vector(c)
c
df <- data.frame(x=x, y=y, z=c)
df
y = rep(c("error", "max_error"), time=5)
df <- data.frame(x=x, y=y, z=c)
df
ggplot(data = df, mapping = aes(x = factor(x), y = z, fill = y)) + geom_bar(stat = 'identity', position = 'dodge')
x = rep(epsilon, each=2)
x
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
ggplot(data = df, mapping = aes(x = epsilon, fill = y)) + geom_bar(stat = 'identity', position = 'dodge')
ggplot(data = df, mapping = aes(x = x,y = z, fill = y)) + geom_bar(stat = 'identity', position = 'dodge')
ggplot(data = df, mapping = aes(x = x,y = z, fill = y)) + geom_bar(stat = 'identity', position = 'dodge') + labs(title = "error comprison", x = "epsilon", y = "")
ggplot(data = df, mapping = aes(x = x,y = z)) + geom_bar(stat = 'identity', position = 'dodge') + labs(title = "error comprison", x = "epsilon", y = "")
ggplot(data = df, mapping = aes(x = x,y = z, fill = y)) + geom_bar(stat = 'identity', position = 'dodge') + labs(title = "error comprison", x = "epsilon", y = "")
df = data.frame("epsilon"=x, "error_type"=y, "count"=c)
df
ggplot(data = df, mapping = aes(x = "epsilon",y = "count", fill = "error_type")) + geom_bar(stat = 'identity', position = 'dodge')
source('~/Documents/Experiment/plot_bar.R', echo=TRUE)
source('~/Documents/Experiment/plot_bar.R', echo=TRUE)
p+theme(axis.title.x = element_text(vjust=0.5, hjust=0.5))
p+theme(panel.grid=element_blank())
p + scale_x_continuous(breaks = seq(0, 3, 0.5))
source('~/Documents/Experiment/plot_bar.R', echo=TRUE)
source('~/Documents/Experiment/plot_bar.R', echo=TRUE)
source('~/Documents/Experiment/plot_bar.R', echo=TRUE)
source('~/Documents/Experiment/plot_bar.R', echo=TRUE)
source('~/Documents/Experiment/plot_bar.R', echo=TRUE)
